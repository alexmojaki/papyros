{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../src/comlink.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/regenerator-runtime/runtime.js"],"names":["module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","_arrayLikeToArray","arr","len","length","i","arr2","Array","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","_slicedToArray","isArray","Symbol","iterator","_arr","_n","_d","_e","_s","_i","next","push","TypeError","_defineProperty","obj","defineProperty","enumerable","configurable","writable","_setPrototypeOf","p","setPrototypeOf","__proto__","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","e","Parent","Class","a","instance","Function","bind","_toConsumableArray","iter","proxyMarker","createEndpoint","releaseProxy","throwMarker","isObject","val","transferHandlers","Map","canHandle","serialize","MessageChannel","port1","port2","expose","deserialize","port","start","wrap","Error","isError","message","stack","serialized","assign","ep","addEventListener","callback","ev","data","returnValue","path","id","type","argumentList","map","fromWireValue","parent","reduce","prop","rawValue","transfer","catch","toWireValue","wireValue","transferables","postMessage","removeEventListener","closeEndPoint","endpoint","isMessagePort","close","target","createProxy","throwIfProxyReleased","isReleased","isProxyReleased","proxy","get","_target","requestResponseMessage","r","set","_thisArg","rawArgumentList","last","processArguments","processed","v","concat","transferCache","WeakMap","transfers","allowArrayLike","it","F","s","f","normalCompletion","didErr","step","_e2","handler","msg","fill","Math","floor","random","Number","MAX_SAFE_INTEGER","join","l","runtime","Op","hasOwn","hasOwnProperty","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","awrap","async","keys","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode"],"mappings":"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","file":"static/js/2.07cffc96.chunk.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  EventSource,\n  Message,\n  MessageType,\n  PostMessageWithOrigin,\n  WireValue,\n  WireValueType,\n} from \"./protocol\";\nexport { Endpoint };\n\nexport const proxyMarker = Symbol(\"Comlink.proxy\");\nexport const createEndpoint = Symbol(\"Comlink.endpoint\");\nexport const releaseProxy = Symbol(\"Comlink.releaseProxy\");\n\nconst throwMarker = Symbol(\"Comlink.thrown\");\n\n/**\n * Interface of values that were marked to be proxied with `comlink.proxy()`.\n * Can also be implemented by classes.\n */\nexport interface ProxyMarked {\n  [proxyMarker]: true;\n}\n\n/**\n * Takes a type and wraps it in a Promise, if it not already is one.\n * This is to avoid `Promise<Promise<T>>`.\n *\n * This is the inverse of `Unpromisify<T>`.\n */\ntype Promisify<T> = T extends Promise<unknown> ? T : Promise<T>;\n/**\n * Takes a type that may be Promise and unwraps the Promise type.\n * If `P` is not a Promise, it returns `P`.\n *\n * This is the inverse of `Promisify<T>`.\n */\ntype Unpromisify<P> = P extends Promise<infer T> ? T : P;\n\n/**\n * Takes the raw type of a remote property and returns the type that is visible to the local thread on the proxy.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions.\n * See https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype RemoteProperty<T> =\n  // If the value is a method, comlink will proxy it automatically.\n  // Objects are only proxied if they are marked to be proxied.\n  // Otherwise, the property is converted to a Promise that resolves the cloned value.\n  T extends Function | ProxyMarked ? Remote<T> : Promisify<T>;\n\n/**\n * Takes the raw type of a property as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This is the inverse of `RemoteProperty<T>`.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions. See\n * https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype LocalProperty<T> = T extends Function | ProxyMarked\n  ? Local<T>\n  : Unpromisify<T>;\n\n/**\n * Proxies `T` if it is a `ProxyMarked`, clones it otherwise (as handled by structured cloning and transfer handlers).\n */\nexport type ProxyOrClone<T> = T extends ProxyMarked ? Remote<T> : T;\n/**\n * Inverse of `ProxyOrClone<T>`.\n */\nexport type UnproxyOrClone<T> = T extends RemoteObject<ProxyMarked>\n  ? Local<T>\n  : T;\n\n/**\n * Takes the raw type of a remote object in the other thread and returns the type as it is visible to the local thread\n * when proxied with `Comlink.proxy()`.\n *\n * This does not handle call signatures, which is handled by the more general `Remote<T>` type.\n *\n * @template T The raw type of a remote object as seen in the other thread.\n */\nexport type RemoteObject<T> = { [P in keyof T]: RemoteProperty<T[P]> };\n/**\n * Takes the type of an object as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This does not handle call signatures, which is handled by the more general `Local<T>` type.\n *\n * This is the inverse of `RemoteObject<T>`.\n *\n * @template T The type of a proxied object.\n */\nexport type LocalObject<T> = { [P in keyof T]: LocalProperty<T[P]> };\n\n/**\n * Additional special comlink methods available on each proxy returned by `Comlink.wrap()`.\n */\nexport interface ProxyMethods {\n  [createEndpoint]: () => Promise<MessagePort>;\n  [releaseProxy]: () => void;\n}\n\n/**\n * Takes the raw type of a remote object, function or class in the other thread and returns the type as it is visible to\n * the local thread from the proxy return value of `Comlink.wrap()` or `Comlink.proxy()`.\n */\nexport type Remote<T> =\n  // Handle properties\n  RemoteObject<T> &\n    // Handle call signature (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: UnproxyOrClone<TArguments[I]> }\n        ) => Promisify<ProxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: UnproxyOrClone<TArguments[I]>;\n            }\n          ): Promisify<Remote<TInstance>>;\n        }\n      : unknown) &\n    // Include additional special comlink methods available on the proxy.\n    ProxyMethods;\n\n/**\n * Expresses that a type can be either a sync or async.\n */\ntype MaybePromise<T> = Promise<T> | T;\n\n/**\n * Takes the raw type of a remote object, function or class as a remote thread would see it through a proxy (e.g. when\n * passed in as a function argument) and returns the type the local thread has to supply.\n *\n * This is the inverse of `Remote<T>`. It takes a `Remote<T>` and returns its original input `T`.\n */\nexport type Local<T> =\n  // Omit the special proxy methods (they don't need to be supplied, comlink adds them)\n  Omit<LocalObject<T>, keyof ProxyMethods> &\n    // Handle call signatures (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: ProxyOrClone<TArguments[I]> }\n        ) => // The raw function could either be sync or async, but is always proxied automatically\n        MaybePromise<UnproxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: ProxyOrClone<TArguments[I]>;\n            }\n          ): // The raw constructor could either be sync or async, but is always proxied automatically\n          MaybePromise<Local<Unpromisify<TInstance>>>;\n        }\n      : unknown);\n\nconst isObject = (val: unknown): val is object =>\n  (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n\n/**\n * Customizes the serialization of certain values as determined by `canHandle()`.\n *\n * @template T The input type being handled by this transfer handler.\n * @template S The serialized type sent over the wire.\n */\nexport interface TransferHandler<T, S> {\n  /**\n   * Gets called for every value to determine whether this transfer handler\n   * should serialize the value, which includes checking that it is of the right\n   * type (but can perform checks beyond that as well).\n   */\n  canHandle(value: unknown): value is T;\n\n  /**\n   * Gets called with the value if `canHandle()` returned `true` to produce a\n   * value that can be sent in a message, consisting of structured-cloneable\n   * values and/or transferrable objects.\n   */\n  serialize(value: T): [S, Transferable[]];\n\n  /**\n   * Gets called to deserialize an incoming value that was serialized in the\n   * other thread with this transfer handler (known through the name it was\n   * registered under).\n   */\n  deserialize(value: S): T;\n}\n\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler: TransferHandler<object, MessagePort> = {\n  canHandle: (val): val is ProxyMarked =>\n    isObject(val) && (val as ProxyMarked)[proxyMarker],\n  serialize(obj) {\n    const { port1, port2 } = new MessageChannel();\n    expose(obj, port1);\n    return [port2, [port2]];\n  },\n  deserialize(port) {\n    port.start();\n    return wrap(port);\n  },\n};\n\ninterface ThrownValue {\n  [throwMarker]: unknown; // just needs to be present\n  value: unknown;\n}\ntype SerializedThrownValue =\n  | { isError: true; value: Error }\n  | { isError: false; value: unknown };\n\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler: TransferHandler<\n  ThrownValue,\n  SerializedThrownValue\n> = {\n  canHandle: (value): value is ThrownValue =>\n    isObject(value) && throwMarker in value,\n  serialize({ value }) {\n    let serialized: SerializedThrownValue;\n    if (value instanceof Error) {\n      serialized = {\n        isError: true,\n        value: {\n          message: value.message,\n          name: value.name,\n          stack: value.stack,\n        },\n      };\n    } else {\n      serialized = { isError: false, value };\n    }\n    return [serialized, []];\n  },\n  deserialize(serialized) {\n    if (serialized.isError) {\n      throw Object.assign(\n        new Error(serialized.value.message),\n        serialized.value\n      );\n    }\n    throw serialized.value;\n  },\n};\n\n/**\n * Allows customizing the serialization of certain values.\n */\nexport const transferHandlers = new Map<\n  string,\n  TransferHandler<unknown, unknown>\n>([\n  [\"proxy\", proxyTransferHandler],\n  [\"throw\", throwTransferHandler],\n]);\n\nexport function expose(obj: any, ep: Endpoint = self as any) {\n  ep.addEventListener(\"message\", function callback(ev: MessageEvent) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    const { id, type, path } = {\n      path: [] as string[],\n      ...(ev.data as Message),\n    };\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n      const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n      switch (type) {\n        case MessageType.GET:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case MessageType.SET:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case MessageType.APPLY:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case MessageType.CONSTRUCT:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case MessageType.ENDPOINT:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case MessageType.RELEASE:\n          {\n            returnValue = undefined;\n          }\n          break;\n        default:\n          return;\n      }\n    } catch (value) {\n      returnValue = { value, [throwMarker]: 0 };\n    }\n    Promise.resolve(returnValue)\n      .catch((value) => {\n        return { value, [throwMarker]: 0 };\n      })\n      .then((returnValue) => {\n        const [wireValue, transferables] = toWireValue(returnValue);\n        ep.postMessage({ ...wireValue, id }, transferables);\n        if (type === MessageType.RELEASE) {\n          // detach and deactive after sending release response above.\n          ep.removeEventListener(\"message\", callback as any);\n          closeEndPoint(ep);\n        }\n      });\n  } as any);\n  if (ep.start) {\n    ep.start();\n  }\n}\n\nfunction isMessagePort(endpoint: Endpoint): endpoint is MessagePort {\n  return endpoint.constructor.name === \"MessagePort\";\n}\n\nfunction closeEndPoint(endpoint: Endpoint) {\n  if (isMessagePort(endpoint)) endpoint.close();\n}\n\nexport function wrap<T>(ep: Endpoint, target?: any): Remote<T> {\n  return createProxy<T>(ep, [], target) as any;\n}\n\nfunction throwIfProxyReleased(isReleased: boolean) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\n\nfunction createProxy<T>(\n  ep: Endpoint,\n  path: (string | number | symbol)[] = [],\n  target: object = function () {}\n): Remote<T> {\n  let isProxyReleased = false;\n  const proxy = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          return requestResponseMessage(ep, {\n            type: MessageType.RELEASE,\n            path: path.map((p) => p.toString()),\n          }).then(() => {\n            closeEndPoint(ep);\n            isProxyReleased = true;\n          });\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy };\n        }\n        const r = requestResponseMessage(ep, {\n          type: MessageType.GET,\n          path: path.map((p) => p.toString()),\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n      // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.SET,\n          path: [...path, prop].map((p) => p.toString()),\n          value,\n        },\n        transferables\n      ).then(fromWireValue) as any;\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if ((last as any) === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: MessageType.ENDPOINT,\n        }).then(fromWireValue);\n      }\n      // We just pretend that `bind()` didn’t happen.\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.APPLY,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.CONSTRUCT,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n  });\n  return proxy as any;\n}\n\nfunction myFlat<T>(arr: (T | T[])[]): T[] {\n  return Array.prototype.concat.apply([], arr);\n}\n\nfunction processArguments(argumentList: any[]): [WireValue[], Transferable[]] {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\n\nconst transferCache = new WeakMap<any, Transferable[]>();\nexport function transfer<T>(obj: T, transfers: Transferable[]): T {\n  transferCache.set(obj, transfers);\n  return obj;\n}\n\nexport function proxy<T>(obj: T): T & ProxyMarked {\n  return Object.assign(obj, { [proxyMarker]: true }) as any;\n}\n\nexport function windowEndpoint(\n  w: PostMessageWithOrigin,\n  context: EventSource = self,\n  targetOrigin = \"*\"\n): Endpoint {\n  return {\n    postMessage: (msg: any, transferables: Transferable[]) =>\n      w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context),\n  };\n}\n\nfunction toWireValue(value: any): [WireValue, Transferable[]] {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: WireValueType.HANDLER,\n          name,\n          value: serializedValue,\n        },\n        transferables,\n      ];\n    }\n  }\n  return [\n    {\n      type: WireValueType.RAW,\n      value,\n    },\n    transferCache.get(value) || [],\n  ];\n}\n\nfunction fromWireValue(value: WireValue): any {\n  switch (value.type) {\n    case WireValueType.HANDLER:\n      return transferHandlers.get(value.name)!.deserialize(value.value);\n    case WireValueType.RAW:\n      return value.value;\n  }\n}\n\nfunction requestResponseMessage(\n  ep: Endpoint,\n  msg: Message,\n  transfers?: Transferable[]\n): Promise<WireValue> {\n  return new Promise((resolve) => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev: MessageEvent) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l as any);\n      resolve(ev.data);\n    } as any);\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage({ id, ...msg }, transfers);\n  });\n}\n\nfunction generateUUID(): string {\n  return new Array(4)\n    .fill(0)\n    .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n    .join(\"-\");\n}\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n"],"sourceRoot":""}